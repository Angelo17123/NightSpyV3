local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local TweenService = game:GetService("TweenService")

_G.G2L = {}
local G2L = _G.G2L

_G.Args = {
    [1] = "Click",
    [2] = false,
    [3] = 0.1
}

_G.NightSpyV4 = {
    SelectedCode = "", -- Almacena el código del remote seleccionado
    History = {},
    HiddenRemotes = {},
    RemoteData = {},
    RemoteCounter = {},
    SelectedRemote = nil,
    RemoteHooks = {},
    MouseEvents = {},
    UIEvents = {},
    RemoteState = {},
    LastRemoteLog = {} -- Almacena los últimos datos de remote calls sin sobrescribir el código seleccionado
}
local NightSpyV4 = _G.NightSpyV4

_G.hookfunction = hookfunction or function(f1, f2) return f2 end
_G.setclipboard = setclipboard or function(text) warn("Clipboard functionality not available") end
_G.getrawmetatable = getrawmetatable or function() return {} end
_G.setreadonly = setreadonly or function() return false end
_G.newcclosure = newcclosure or function(f) return f end
_G.getnamecallmethod = getnamecallmethod or function() return "" end

local hookfunction = _G.hookfunction
local setclipboard = _G.setclipboard
local getrawmetatable = _G.getrawmetatable
local setreadonly = _G.setreadonly
local newcclosure = _G.newcclosure
local getnamecallmethod = _G.getnamecallmethod

local function aplicarTransparencia(elemento)
    if elemento:IsA("GuiObject") then
        if elemento:IsA("TextLabel") or elemento:IsA("TextButton") or elemento:IsA("TextBox") then
            elemento.BackgroundTransparency = 1
            elemento.TextTransparency = _G.Args[3] * 0.7
        else
            elemento.BackgroundTransparency = 1
        end
    end
    for _, hijo in ipairs(elemento:GetChildren()) do
        aplicarTransparencia(hijo)
    end
end

local function updateCodeView()
    if NightSpyV4.SelectedCode ~= "" and not G2L["7"]:IsFocused() then
        G2L["7"].Text = NightSpyV4.SelectedCode
    end
end

local function actualizarTransparencia()
    aplicarTransparencia(G2L["1"])
end

G2L["1"] = Instance.new("ScreenGui")
G2L["1"].Name = "NightSpy V4"
G2L["1"].ResetOnSpawn = false
G2L["1"].ZIndexBehavior = Enum.ZIndexBehavior.Sibling
G2L["1"].Parent = LocalPlayer:WaitForChild("PlayerGui")

G2L["2"] = Instance.new("Frame", G2L["1"])
G2L["2"].Name = "MainFrame"
G2L["2"].BackgroundColor3 = Color3.fromRGB(25, 25, 30)
G2L["2"].BorderSizePixel = 0
G2L["2"].Position = UDim2.new(0.5, -225, 0.5, -175)
G2L["2"].Size = UDim2.new(0, 450, 0, 350)
G2L["2"].Active = true
G2L["2"].Draggable = true
G2L["2"].BackgroundTransparency = 1

local corner = Instance.new("UICorner", G2L["2"])
corner.CornerRadius = UDim.new(0, 10)

local shadow = Instance.new("ImageLabel", G2L["2"])
shadow.Name = "Shadow"
shadow.BackgroundTransparency = 1
shadow.Image = "rbxassetid://1316045217"
shadow.ImageTransparency = 0.6
shadow.ImageColor3 = Color3.fromRGB(0, 0, 0)
shadow.Size = UDim2.new(1, 40, 1, 40)
shadow.Position = UDim2.new(0, -20, 0, -20)
shadow.ZIndex = -1

G2L["3"] = Instance.new("Frame", G2L["2"])
G2L["3"].Name = "TopBar"
G2L["3"].BackgroundColor3 = Color3.fromRGB(35, 35, 40)
G2L["3"].BorderSizePixel = 0
G2L["3"].Size = UDim2.new(1, 0, 0, 30)
G2L["3"].BackgroundTransparency = 1
Instance.new("UICorner", G2L["3"]).CornerRadius = UDim.new(0, 10)

G2L["4"] = Instance.new("TextLabel", G2L["3"])
G2L["4"].Name = "Title"
G2L["4"].BackgroundTransparency = 1
G2L["4"].Position = UDim2.new(0, 15, 0, 0)
G2L["4"].Size = UDim2.new(0, 200, 1, 0)
G2L["4"].Font = Enum.Font.GothamBold
G2L["4"].Text = "NightSpy V4"
G2L["4"].TextColor3 = Color3.fromRGB(220, 220, 255)
G2L["4"].TextSize = 16
G2L["4"].TextXAlignment = Enum.TextXAlignment.Left

G2L["5"] = Instance.new("TextButton", G2L["3"])
G2L["5"].Name = "CloseButton"
G2L["5"].BackgroundColor3 = Color3.fromRGB(240, 80, 80)
G2L["5"].Position = UDim2.new(1, -35, 0.5, -10)
G2L["5"].Size = UDim2.new(0, 25, 0, 25)
G2L["5"].Font = Enum.Font.GothamBold
G2L["5"].Text = "X"
G2L["5"].TextColor3 = Color3.fromRGB(255, 255, 255)
G2L["5"].TextSize = 16
G2L["5"].BackgroundTransparency = 1
Instance.new("UICorner", G2L["5"]).CornerRadius = UDim.new(0, 8)

local minimizeButton = Instance.new("TextButton", G2L["3"])
minimizeButton.Name = "MinimizeButton"
minimizeButton.BackgroundColor3 = Color3.fromRGB(255, 180, 0)
minimizeButton.Position = UDim2.new(1, -65, 0.5, -10)
minimizeButton.Size = UDim2.new(0, 25, 0, 25)
minimizeButton.Font = Enum.Font.GothamBold
minimizeButton.Text = "-"
minimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
minimizeButton.TextSize = 16
minimizeButton.BackgroundTransparency = 1
Instance.new("UICorner", minimizeButton).CornerRadius = UDim.new(0, 8)

G2L["6"] = Instance.new("ScrollingFrame", G2L["2"])
G2L["6"].Name = "RemotesList"
G2L["6"].BackgroundColor3 = Color3.fromRGB(30, 30, 35)
G2L["6"].BorderSizePixel = 0
G2L["6"].Position = UDim2.new(0, 15, 0, 45)
G2L["6"].Size = UDim2.new(0, 180, 0, 230)
G2L["6"].CanvasSize = UDim2.new(0, 0, 0, 0)
G2L["6"].ScrollBarThickness = 6
G2L["6"].AutomaticCanvasSize = Enum.AutomaticSize.Y
G2L["6"].BackgroundTransparency = 1
Instance.new("UICorner", G2L["6"]).CornerRadius = UDim.new(0, 8)

local listLayout = Instance.new("UIListLayout", G2L["6"])
listLayout.Padding = UDim.new(0, 6)
listLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
listLayout.SortOrder = Enum.SortOrder.LayoutOrder

local hiddenList = Instance.new("ScrollingFrame", G2L["2"])
hiddenList.Name = "HiddenList"
hiddenList.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
hiddenList.BorderSizePixel = 0
hiddenList.Position = UDim2.new(0, 15, 0, 285)
hiddenList.Size = UDim2.new(0, 180, 0, 50)
hiddenList.CanvasSize = UDim2.new(0, 0, 0, 0)
hiddenList.ScrollBarThickness = 6
hiddenList.AutomaticCanvasSize = Enum.AutomaticSize.Y
hiddenList.BackgroundTransparency = 1
Instance.new("UICorner", hiddenList).CornerRadius = UDim.new(0, 8)

local hiddenLabel = Instance.new("TextLabel", G2L["2"])
hiddenLabel.BackgroundTransparency = 1
hiddenLabel.Position = UDim2.new(0, 15, 0, 265)
hiddenLabel.Size = UDim2.new(0, 180, 0, 20)
hiddenLabel.Font = Enum.Font.GothamBold
hiddenLabel.Text = "Hidden Remotes"
hiddenLabel.TextColor3 = Color3.fromRGB(200, 200, 255)
hiddenLabel.TextSize = 14

local hiddenLayout = Instance.new("UIListLayout", hiddenList)
hiddenLayout.Padding = UDim.new(0, 6)
hiddenLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
hiddenLayout.SortOrder = Enum.SortOrder.LayoutOrder

G2L["7"] = Instance.new("TextBox", G2L["2"])
G2L["7"].Name = "CodeView"
G2L["7"].BackgroundColor3 = Color3.fromRGB(30, 30, 35)
G2L["7"].BorderSizePixel = 0
G2L["7"].Position = UDim2.new(0, 205, 0, 45)
G2L["7"].Size = UDim2.new(0, 230, 0, 230)
G2L["7"].Font = Enum.Font.Code
G2L["7"].MultiLine = true
G2L["7"].Text = "-- Remote spy output will appear here"
G2L["7"].TextColor3 = Color3.fromRGB(220, 255, 220)
G2L["7"].TextSize = 14
G2L["7"].TextXAlignment = Enum.TextXAlignment.Left
G2L["7"].TextYAlignment = Enum.TextYAlignment.Top
G2L["7"].ClearTextOnFocus = false
G2L["7"].TextWrapped = true
G2L["7"].BackgroundTransparency = 1
Instance.new("UICorner", G2L["7"]).CornerRadius = UDim.new(0, 8)

local buttonsContainer = Instance.new("Frame", G2L["2"])
buttonsContainer.Name = "ButtonsContainer"
buttonsContainer.BackgroundTransparency = 1
buttonsContainer.Position = UDim2.new(0, 205, 0, 285)
buttonsContainer.Size = UDim2.new(0, 230, 0, 50)

local copyButton = Instance.new("TextButton", buttonsContainer)
copyButton.Name = "CopyButton"
copyButton.BackgroundTransparency = 1
copyButton.Position = UDim2.new(0, 0, 0, 0)
copyButton.Size = UDim2.new(0, 55, 0, 40)
copyButton.Font = Enum.Font.Gotham
copyButton.Text = "Copy"
copyButton.TextColor3 = Color3.fromRGB(255, 255, 255)
copyButton.TextSize = 14
Instance.new("UICorner", copyButton).CornerRadius = UDim.new(0, 8)

local clearButton = Instance.new("TextButton", buttonsContainer)
clearButton.Name = "ClearButton"
clearButton.BackgroundTransparency = 1
clearButton.Position = UDim2.new(0, 60, 0, 0)
clearButton.Size = UDim2.new(0, 55, 0, 40)
clearButton.Font = Enum.Font.Gotham
clearButton.Text = "Clear"
clearButton.TextColor3 = Color3.fromRGB(255, 255, 255)
clearButton.TextSize = 14
Instance.new("UICorner", clearButton).CornerRadius = UDim.new(0, 8)

local runButton = Instance.new("TextButton", buttonsContainer)
runButton.Name = "RunButton"
runButton.BackgroundTransparency = 1
runButton.Position = UDim2.new(0, 120, 0, 0)
runButton.Size = UDim2.new(0, 55, 0, 40)
runButton.Font = Enum.Font.Gotham
runButton.Text = "Run"
runButton.TextColor3 = Color3.fromRGB(255, 255, 255)
runButton.TextSize = 14
Instance.new("UICorner", runButton).CornerRadius = UDim.new(0, 8)

local hideButton = Instance.new("TextButton", buttonsContainer)
hideButton.Name = "HideButton"
hideButton.BackgroundTransparency = 1
hideButton.Position = UDim2.new(0, 180, 0, 0)
hideButton.Size = UDim2.new(0, 50, 0, 40)
hideButton.Font = Enum.Font.Gotham
hideButton.Text = "Hide"
hideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
hideButton.TextSize = 14
Instance.new("UICorner", hideButton).CornerRadius = UDim.new(0, 8)

local function setupButtonHover(button)
    button.MouseEnter:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(70, 70, 75)
        }):Play()
    end)
    button.MouseLeave:Connect(function()
        TweenService:Create(button, TweenInfo.new(0.2), {
            BackgroundColor3 = Color3.fromRGB(50, 50, 55)
        }):Play()
    end)
end

setupButtonHover(copyButton)
setupButtonHover(clearButton)
setupButtonHover(runButton)
setupButtonHover(hideButton)

G2L["5"].MouseEnter:Connect(function()
    TweenService:Create(G2L["5"], TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(255, 100, 100)
    }):Play()
end)
G2L["5"].MouseLeave:Connect(function()
    TweenService:Create(G2L["5"], TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(240, 80, 80)
    }):Play()
end)

minimizeButton.MouseEnter:Connect(function()
    TweenService:Create(minimizeButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(255, 200, 50)
    }):Play()
end)
minimizeButton.MouseLeave:Connect(function()
    TweenService:Create(minimizeButton, TweenInfo.new(0.2), {
        BackgroundColor3 = Color3.fromRGB(255, 180, 0)
    }):Play()
end)

local isMinimized = false
local originalSize = G2L["2"].Size
local originalPosition = G2L["2"].Position

local function setElementsVisibility(visible)
    for _, child in pairs(G2L["2"]:GetChildren()) do
        if child.Name ~= "TopBar" and child.Name ~= "UICorner" and child.Name ~= "Shadow" then
            child.Visible = visible
        end
    end
    G2L["3"].Visible = true
    G2L["4"].Visible = true
    G2L["5"].Visible = true
    minimizeButton.Visible = true
end

minimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    if isMinimized then
        originalPosition = G2L["2"].Position
        TweenService:Create(G2L["2"], TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            Size = UDim2.new(0, originalSize.X.Offset, 0, 30)
        }):Play()
        setElementsVisibility(false)
        minimizeButton.Text = "+"
    else
        TweenService:Create(G2L["2"], TweenInfo.new(0.3, Enum.EasingStyle.Quad), {
            Size = originalSize, Position = originalPosition
        }):Play()
        wait(0.3)
        setElementsVisibility(true)
        minimizeButton.Text = "-"
    end
end)

G2L["5"].MouseButton1Click:Connect(function()
    for _, hook in pairs(NightSpyV4.RemoteHooks) do
        if hook.original and hook.current then
            hookfunction(hook.current, hook.original)
        end
    end
    NightSpyV4.SelectedCode = ""
    NightSpyV4.History = {}
    NightSpyV4.RemoteData = {}
    NightSpyV4.RemoteCounter = {}
    NightSpyV4.SelectedRemote = nil
    NightSpyV4.RemoteHooks = {}
    NightSpyV4.LastRemoteLog = {}
    G2L["1"]:Destroy()
end)

copyButton.MouseButton1Click:Connect(function()
    if setclipboard then
        setclipboard(G2L["7"].Text)
    end
end)

local function getPath(instance)
    local path = instance:GetFullName()
    path = path:gsub("^game%.", "")
    path = path:gsub("^RobloxReplicatedStorage%.", "game:GetService('RobloxReplicatedStorage').")
    path = path:gsub("^ReplicatedStorage%.", "game:GetService('ReplicatedStorage').")
    path = path:gsub("^StarterGui%.", "game:GetService('StarterGui').")
    path = path:gsub("^Workspace%.", "game:GetService('Workspace').")
    path = path:gsub("^Players%.", "game:GetService('Players').")
    return path
end

local function formatValue(value)
    if typeof(value) == "string" then
        return string.format("%q", value)
    elseif typeof(value) == "boolean" then
        return tostring(value)
    elseif typeof(value) == "number" then
        return tostring(value)
    elseif typeof(value) == "Instance" then
        return getPath(value)
    else
        return string.format("%q", tostring(value))
    end
end

local function generateCode(remote, path, args)
    local argsTable = {}
    if args then
        for i, arg in ipairs(args) do
            if i == 1 then
                argsTable[1] = string.format('[1] = "%s"', tostring(arg))
            elseif i == 2 then
                argsTable[2] = string.format('[2] = %s', tostring(arg))
            else
                argsTable[i] = string.format('[%d] = %s', i, formatValue(arg))
            end
        end
    end
    local argsString = table.concat(argsTable, ",\n    ")
    if remote:IsA("RemoteEvent") then
        return string.format([[
local args = {
    %s
}

%s:FireServer(unpack(args))]], argsString, remote.Name)
    else
        return string.format([[
local args = {
    %s
}

%s:InvokeServer(unpack(args))]], argsString, remote.Name)
    end
end

local function getAllRemotes()
    local remotes = {}
    local services = {
        game:GetService("RobloxReplicatedStorage"),
        game:GetService("ReplicatedStorage"),
        game:GetService("StarterGui"),
        LocalPlayer:WaitForChild("PlayerGui"),
        game:GetService("Workspace"),
        LocalPlayer:WaitForChild("PlayerScripts"),
        LocalPlayer:WaitForChild("Backpack")
    }
    local function scanForRemotes(instance)
        for _, child in ipairs(instance:GetChildren()) do
            if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
                table.insert(remotes, child)
            end
            task.spawn(function() scanForRemotes(child) end)
        end
    end
    for _, service in ipairs(services) do
        task.spawn(function() scanForRemotes(service) end)
    end
    return remotes
end

local function toggleRemoteVisibility(remoteName, hide)
    if hide then
        NightSpyV4.HiddenRemotes[remoteName] = true
        for _, child in pairs(G2L["6"]:GetChildren()) do
            if child:IsA("TextButton") and child.Text == remoteName then
                local hiddenButton = Instance.new("TextButton")
                hiddenButton.Name = child.Name
                hiddenButton.Size = UDim2.new(1, -10, 0, 30)
                hiddenButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
                hiddenButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                hiddenButton.Text = "Hidden: " .. remoteName
                hiddenButton.TextSize = 14
                hiddenButton.Font = Enum.Font.Gotham
                hiddenButton.TextXAlignment = Enum.TextXAlignment.Left
                hiddenButton.BackgroundTransparency = 1
                
                local padding = Instance.new("UIPadding", hiddenButton)
                padding.PaddingLeft = UDim.new(0, 12)
                
                Instance.new("UICorner", hiddenButton).CornerRadius = UDim.new(0, 6)
                
                local showButton = Instance.new("TextButton", hiddenButton)
                showButton.Size = UDim2.new(0, 20, 0, 20)
                showButton.Position = UDim2.new(1, -25, 0.5, -10)
                showButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
                showButton.Text = "S"
                showButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                showButton.TextSize = 12
                showButton.Font = Enum.Font.GothamBold
                showButton.BackgroundTransparency = 1
                Instance.new("UICorner", showButton).CornerRadius = UDim.new(0, 4)
                
                showButton.MouseButton1Click:Connect(function()
                    toggleRemoteVisibility(remoteName, false)
                end)
                
                hiddenButton.Parent = hiddenList
                child:Destroy()
            end
        end
    else
        NightSpyV4.HiddenRemotes[remoteName] = nil
        for _, child in pairs(hiddenList:GetChildren()) do
            if child:IsA("TextButton") and child.Text == "Hidden: " .. remoteName then
                child:Destroy()
            end
        end
        local remotes = getAllRemotes()
        for _, remote in ipairs(remotes) do
            if remote.Name == remoteName then
                task.spawn(function() handleRemote(remote) end)
                break
            end
        end
    end
end

local function handleRemote(remote)
    if not remote or not remote.Parent or NightSpyV4.RemoteHooks[remote.Name] then return end
    
    NightSpyV4.RemoteCounter[remote.Name] = NightSpyV4.RemoteCounter[remote.Name] or 0
    
    local function createRemoteButton(uniqueId, remote, args, isServerEvent, targetList)
        if NightSpyV4.HiddenRemotes[remote.Name] and targetList == G2L["6"] then return end
        
        NightSpyV4.RemoteCounter[remote.Name] = NightSpyV4.RemoteCounter[remote.Name] + 1
        local path = getPath(remote)
        local code = generateCode(remote, path, args)
        
        NightSpyV4.RemoteData[uniqueId] = { path = path, lastCode = code, remote = remote }
        
        local remoteButton = Instance.new("TextButton")
        remoteButton.Name = uniqueId
        remoteButton.Size = UDim2.new(1, -10, 0, 30)
        remoteButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
        remoteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
        remoteButton.Text = targetList == hiddenList and "Hidden: " .. remote.Name or remote.Name
        remoteButton.TextSize = 14
        remoteButton.Font = Enum.Font.Gotham
        remoteButton.TextXAlignment = Enum.TextXAlignment.Left
        remoteButton.BackgroundTransparency = 1
        
        local typeIndicator = Instance.new("Frame", remoteButton)
        typeIndicator.Size = UDim2.new(0, 4, 1, -4)
        typeIndicator.Position = UDim2.new(0, 4, 0, 2)
        typeIndicator.BackgroundColor3 = isServerEvent and Color3.fromRGB(255, 170, 0) or Color3.fromRGB(0, 170, 255)
        Instance.new("UICorner", typeIndicator).CornerRadius = UDim.new(0, 2)
        
        local padding = Instance.new("UIPadding", remoteButton)
        padding.PaddingLeft = UDim.new(0, 12)
        
        Instance.new("UICorner", remoteButton).CornerRadius = UDim.new(0, 6)
        remoteButton.Parent = targetList
        
        if targetList == G2L["6"] then
            local hideButton = Instance.new("TextButton", remoteButton)
            hideButton.Size = UDim2.new(0, 20, 0, 20)
            hideButton.Position = UDim2.new(1, -25, 0.5, -10)
            hideButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
            hideButton.Text = "H"
            hideButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            hideButton.TextSize = 12
            hideButton.Font = Enum.Font.GothamBold
            hideButton.BackgroundTransparency = 1
            Instance.new("UICorner", hideButton).CornerRadius = UDim.new(0, 4)
            
            hideButton.MouseButton1Click:Connect(function()
                toggleRemoteVisibility(remote.Name, true)
            end)
        else
            local showButton = Instance.new("TextButton", remoteButton)
            showButton.Size = UDim2.new(0, 20, 0, 20)
            showButton.Position = UDim2.new(1, -25, 0.5, -10)
            showButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
            showButton.Text = "S"
            showButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            showButton.TextSize = 12
            showButton.Font = Enum.Font.GothamBold
            showButton.BackgroundTransparency = 1
            Instance.new("UICorner", showButton).CornerRadius = UDim.new(0, 4)
            
            showButton.MouseButton1Click:Connect(function()
                toggleRemoteVisibility(remote.Name, false)
            end)
        end
        
        remoteButton.MouseButton1Click:Connect(function()
            if NightSpyV4.SelectedRemote then
                NightSpyV4.SelectedRemote.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
            end
            NightSpyV4.SelectedRemote = remoteButton
            remoteButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
            local data = NightSpyV4.RemoteData[uniqueId]
            if data then
                NightSpyV4.SelectedCode = data.lastCode
                G2L["7"].Text = data.lastCode
            end
        end)
        
        return remoteButton
    end
    
    if NightSpyV4.HiddenRemotes[remote.Name] then
        local uniqueId = remote.Name .. "_" .. NightSpyV4.RemoteCounter[remote.Name]
        createRemoteButton(uniqueId, remote, {}, false, hiddenList)
    else
        if remote:IsA("RemoteEvent") then
            local originalFireServer
            originalFireServer = hookfunction(remote.FireServer, newcclosure(function(self, ...)
                local args = {...}
                local uniqueId = remote.Name .. "_" .. NightSpyV4.RemoteCounter[remote.Name]
                NightSpyV4.LastRemoteLog[uniqueId] = generateCode(remote, getPath(remote), args)
                createRemoteButton(uniqueId, remote, args, true, G2L["6"])
                return originalFireServer(self, ...)
            end))
            
            remote.OnClientEvent:Connect(function(...)
                local args = {...}
                local uniqueId = remote.Name .. "_" .. NightSpyV4.RemoteCounter[remote.Name]
                NightSpyV4.LastRemoteLog[uniqueId] = generateCode(remote, getPath(remote), args)
                createRemoteButton(uniqueId, remote, args, false, G2L["6"])
            end)
            
            NightSpyV4.RemoteHooks[remote.Name] = { original = originalFireServer, current = remote.FireServer }
        elseif remote:IsA("RemoteFunction") then
            local originalInvoke
            originalInvoke = hookfunction(remote.InvokeServer, newcclosure(function(self, ...)
                local args = {...}
                local uniqueId = remote.Name .. "_" .. NightSpyV4.RemoteCounter[remote.Name]
                NightSpyV4.LastRemoteLog[uniqueId] = generateCode(remote, getPath(remote), args)
                createRemoteButton(uniqueId, remote, args, true, G2L["6"])
                return originalInvoke(self, ...)
            end))
            
            NightSpyV4.RemoteHooks[remote.Name] = { original = originalInvoke, current = remote.InvokeServer }
        end
    end
end

local function clearRemotes()
    for _, hook in pairs(NightSpyV4.RemoteHooks) do
        if hook.original and hook.current then
            hookfunction(hook.current, hook.original)
        end
    end
    
    NightSpyV4.SelectedCode = ""
    NightSpyV4.History = {}
    NightSpyV4.RemoteData = {}
    NightSpyV4.RemoteCounter = {}
    NightSpyV4.SelectedRemote = nil
    NightSpyV4.RemoteHooks = {}
    NightSpyV4.LastRemoteLog = {}
    
    G2L["6"]:ClearAllChildren()
    local remoteLayout = Instance.new("UIListLayout", G2L["6"])
    remoteLayout.Padding = UDim.new(0, 6)
    
    hiddenList:ClearAllChildren()
    local hiddenLayout = Instance.new("UIListLayout", hiddenList)
    hiddenLayout.Padding = UDim.new(0, 6)
    
    updateCodeView()
    
    local remotes = getAllRemotes()
    for _, remote in ipairs(remotes) do
        task.spawn(function() handleRemote(remote) end)
    end
end

clearButton.MouseButton1Click:Connect(clearRemotes)

runButton.MouseButton1Click:Connect(function()
    loadstring(G2L["7"].Text)()
end)

hideButton.MouseButton1Click:Connect(function()
    if NightSpyV4.SelectedRemote then
        if NightSpyV4.SelectedRemote.Parent == G2L["6"] then
            moveRemote(NightSpyV4.SelectedRemote, G2L["6"], hiddenList)
        else
            moveRemote(NightSpyV4.SelectedRemote, hiddenList, G2L["6"])
        end
        NightSpyV4.SelectedRemote.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
        NightSpyV4.SelectedRemote = nil
    end
end)

local function moveRemote(button, fromList, toList)
    if button and button:IsA("TextButton") then
        local remoteName = button.Name:gsub("_.*", "")
        if toList == hiddenList then
            NightSpyV4.HiddenRemotes[remoteName] = true
        else
            NightSpyV4.HiddenRemotes[remoteName] = nil
        end
        
        if NightSpyV4.SelectedRemote and NightSpyV4.SelectedRemote.Name:gsub("_.*", "") == remoteName then
            NightSpyV4.SelectedRemote.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
            NightSpyV4.SelectedRemote = nil
            G2L["7"].Text = ""
            NightSpyV4.SelectedCode = ""
        end
        
        local allButtons = {}
        for _, list in ipairs({G2L["6"], hiddenList}) do
            for _, child in ipairs(list:GetChildren()) do
                if child:IsA("TextButton") and child.Name:gsub("_.*", "") == remoteName then
                    table.insert(allButtons, child)
                end
            end
        end
        
        for _, btn in ipairs(allButtons) do
            btn.Parent = toList
            btn.Text = toList == hiddenList and "Hidden: " .. remoteName or remoteName
        end
        
        toList.CanvasSize = UDim2.new(0, 0, 0, toList.UIListLayout.AbsoluteContentSize.Y)
        fromList.CanvasSize = UDim2.new(0, 0, 0, fromList.UIListLayout.AbsoluteContentSize.Y)
    end
end

local function init()
    local function getInstancePath(instance)
        if not instance then return "None" end
        local path = instance.Name
        local current = instance.Parent
        while current and current ~= game do
            path = current.Name .. "." .. path
            current = current.Parent
        end
        return path
    end

    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if input.UserInputType == Enum.UserInputType.MouseButton1 and not gameProcessed then
            local character = LocalPlayer.Character
            local tool = character and character:FindFirstChildOfClass("Tool")
            local toolPath = getInstancePath(tool)
            
            local eventData = {
                [1] = "Click",
                [2] = true,
                [3] = tool and tool.Name or "None",
                [4] = toolPath
            }
            
            local uniqueId = "MouseClick_" .. tostring(#NightSpyV4.MouseEvents + 1)
            NightSpyV4.MouseEvents[uniqueId] = eventData
            
            local remoteButton = Instance.new("TextButton")
            remoteButton.Name = uniqueId
            remoteButton.Size = UDim2.new(1, -10, 0, 30)
            remoteButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
            remoteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
            remoteButton.Text = eventData[3]
            remoteButton.TextSize = 14
            remoteButton.Font = Enum.Font.Gotham
            remoteButton.TextXAlignment = Enum.TextXAlignment.Left
            remoteButton.BackgroundTransparency = 1
            
            local typeIndicator = Instance.new("Frame", remoteButton)
            typeIndicator.Size = UDim2.new(0, 4, 1, -4)
            typeIndicator.Position = UDim2.new(0, 4, 0, 2)
            typeIndicator.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
            Instance.new("UICorner", typeIndicator).CornerRadius = UDim.new(0, 2)
            
            local padding = Instance.new("UIPadding", remoteButton)
            padding.PaddingLeft = UDim.new(0, 12)
            
            Instance.new("UICorner", remoteButton).CornerRadius = UDim.new(0, 6)
            remoteButton.Parent = G2L["6"]
            
            remoteButton.MouseButton1Click:Connect(function()
                if NightSpyV4.SelectedRemote then
                    NightSpyV4.SelectedRemote.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
                end
                NightSpyV4.SelectedRemote = remoteButton
                remoteButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
                
                local code = string.format([[local args = {
    [1] = %q,
    [2] = %s,
    [3] = %q,
    [4] = %q
}

]], eventData[1], tostring(eventData[2]), eventData[3], eventData[4])
                NightSpyV4.SelectedCode = code
                G2L["7"].Text = code
            end)
        end
    end)

    local function handleUIButton(button)
        if (button:IsA("TextButton") or button:IsA("ImageButton")) and not button:IsDescendantOf(G2L["1"]) then
            button.MouseButton1Click:Connect(function()
                local buttonPath = getInstancePath(button)
                local eventData = {
                    [1] = "UIClick",
                    [2] = true,
                    [3] = button.Name,
                    [4] = buttonPath
                }
                
                local uniqueId = "UIClick_" .. tostring(#NightSpyV4.UIEvents + 1)
                NightSpyV4.UIEvents[uniqueId] = eventData
                
                local remoteButton = Instance.new("TextButton")
                remoteButton.Name = uniqueId
                remoteButton.Size = UDim2.new(1, -10, 0, 30)
                remoteButton.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
                remoteButton.TextColor3 = Color3.fromRGB(255, 255, 255)
                remoteButton.Text = eventData[3]
                remoteButton.TextSize = 14
                remoteButton.Font = Enum.Font.Gotham
                remoteButton.TextXAlignment = Enum.TextXAlignment.Left
                remoteButton.BackgroundTransparency = 1
                
                local typeIndicator = Instance.new("Frame", remoteButton)
                typeIndicator.Size = UDim2.new(0, 4, 1, -4)
                typeIndicator.Position = UDim2.new(0, 4, 0, 2)
                typeIndicator.BackgroundColor3 = Color3.fromRGB(255, 170, 0)
                Instance.new("UICorner", typeIndicator).CornerRadius = UDim.new(0, 2)
                
                local padding = Instance.new("UIPadding", remoteButton)
                padding.PaddingLeft = UDim.new(0, 12)
                
                Instance.new("UICorner", remoteButton).CornerRadius = UDim.new(0, 6)
                remoteButton.Parent = G2L["6"]
                
                remoteButton.MouseButton1Click:Connect(function()
                    if NightSpyV4.SelectedRemote then
                        NightSpyV4.SelectedRemote.BackgroundColor3 = Color3.fromRGB(40, 40, 45)
                    end
                    NightSpyV4.SelectedRemote = remoteButton
                    remoteButton.BackgroundColor3 = Color3.fromRGB(60, 60, 65)
                    
                    local code = string.format([[local args = {
    [1] = %q,
    [2] = %s,
    [3] = %q,
    [4] = %q
}

]], eventData[1], tostring(eventData[2]), eventData[3], eventData[4])
                    NightSpyV4.SelectedCode = code
                    G2L["7"].Text = code
                end)
            end)
        end
    end

    local function scanForUIButtons(parent)
        for _, child in ipairs(parent:GetChildren()) do
            handleUIButton(child)
            scanForUIButtons(child)
        end
    end

    game.DescendantAdded:Connect(handleUIButton)
    scanForUIButtons(game)

    local function scanInstance(instance)
        for _, child in ipairs(instance:GetChildren()) do
            if child:IsA("RemoteEvent") or child:IsA("RemoteFunction") then
                handleRemote(child)
            end
            scanInstance(child)
        end
    end

    scanInstance(game)
    game.DescendantAdded:Connect(function(descendant)
        if descendant:IsA("RemoteEvent") or descendant:IsA("RemoteFunction") then
            handleRemote(descendant)
        end
    end)

    local mt = getrawmetatable(game)
    local oldNamecall = mt.__namecall
    setreadonly(mt, false)
    mt.__namecall = newcclosure(function(self, ...)
        local args = {...}
        local method = getnamecallmethod()
        if method == "FireServer" or method == "InvokeServer" then
            local code = string.format([[
local args = {
    [1] = "%s",
    [2] = %s
}
]], tostring(args[1]), tostring(args[2]))
            -- Almacena en LastRemoteLog pero no sobrescribe SelectedCode
            NightSpyV4.LastRemoteLog["global"] = code
        end
        return oldNamecall(self, ...)
    end)
    setreadonly(mt, true)
end

G2L["7"].FocusLost:Connect(function()
    if G2L["7"].Text ~= NightSpyV4.SelectedCode then
        NightSpyV4.SelectedCode = G2L["7"].Text
    end
end)

G2L["4"].BackgroundTransparency = 1
aplicarTransparencia(G2L["1"])

local mt = getrawmetatable(_G.Args)
if mt then
    local oldNewindex = mt.__newindex
    setreadonly(mt, false)
    mt.__newindex = function(t, k, v)
        oldNewindex(t, k, v)
        if k == 3 then actualizarTransparencia() end
    end
    setreadonly(mt, true)
end

init()
return NightSpyV4
